<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
	 	http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- Configuring RoleVoter bean to use custom access roles, by default roles 
		should be in the form ROLE_{XXX} -->
		
	<context:property-placeholder location="classpath:hibernate.properties"/>
		
	<bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleVoter">
		<property name="rolePrefix" value="ROLE_"></property>
	</bean>

	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg name="decisionVoters"
			ref="roleVoter" />
	</bean>

	<sec:http authentication-manager-ref="jdbc-auth"
		access-decision-manager-ref="accessDecisionManager">	
		<sec:intercept-url pattern="/emp/**" access="ROLE_ADMIN" />
		<sec:form-login login-page="/login" authentication-failure-url="/denied"
			username-parameter="username" password-parameter="password"
			default-target-url="/home" />
		<sec:logout invalidate-session="true" logout-success-url="/login"
			logout-url="/j_spring_security_logout" />
		<sec:access-denied-handler error-page="/denied"/>
		<sec:session-management invalid-session-url="/login">
			<sec:concurrency-control max-sessions="1"
				expired-url="/login" />
		</sec:session-management>
	</sec:http>

	<!-- <sec:authentication-manager id="in-memory-auth">
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="Raj" password="123456" authorities="ROLE_ADMIN" />
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager> -->

	<sec:authentication-manager id="dao-auth">
		<sec:authentication-provider user-service-ref="userDetailsService">
		</sec:authentication-provider>
	</sec:authentication-manager>

	<bean id="userDetailsService"
		class="com.raj.security.AppUserDetailsServiceDAO" />

	<sec:authentication-manager id="jdbc-auth">
		<sec:authentication-provider>
			<sec:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from users where username = ?"
				authorities-by-username-query="select username,role from user_roles where username = ?" />
		</sec:authentication-provider>
	</sec:authentication-manager>

	<!-- MySQL DB DataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.connection.driver_class}"></property>
		<property name="url" value="${jdbc.connection.url}"></property>
		<property name="username" value="${jdbc.connection.username}"></property>
		<property name="password" value="${jdbc.connection.password}"></property>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
		<!-- <property name="configLocation">
            <value>classpath:hibernate.cfg.xml</value>
        </property> -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2dll.auto} </prop>
			</props>
		</property>
	</bean>
	
	<!-- If DataSource is configured in Tomcat Servlet Container -->
	<!-- <beans:bean id="dbDataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:comp/env/jdbc/MyLocalDB" />
	</beans:bean> -->
</beans>